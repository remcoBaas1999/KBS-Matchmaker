<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Matchmaker"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Matchmaker.RegisterWindow"
        mc:Ignorable="d"
        Title="RegisterWindow" Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>

            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="50*"/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.RowSpan="1" Background="#cbd1cc" Grid.ColumnSpan="2"/>
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1" HorizontalAlignment="Center"/>
            <StackPanel Grid.Column="1" Margin="0, 100, 15, 0" HorizontalAlignment="Left">
                <TextBlock Text="Create A New Account" FontWeight="Bold" FontSize="20" FontFamily="Roboto"/>
                <Button x:Name="BackToLogin" Content="&lt; LOG IN" Width="100" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF7910AA" HorizontalAlignment="Right" FontWeight="Bold" FontFamily="Roboto" Margin="0,5,0,0" Click="BackToLogin_Click"/>
            </StackPanel>
            <StackPanel Grid.Column="2" Margin="0,100,0,0">
                <TextBlock Text="Real Name" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <TextBox x:Name="NameField" MinWidth="175" BorderBrush="#FFCFCCCC" Background="{x:Null}" BorderThickness="0,0,0,2" Margin="0,0,0,10" SelectionBrush="#FF7910AA" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <TextBlock Text="Email Address" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <TextBox x:Name="EmailField" MinWidth="175" BorderBrush="#FFCFCCCC" Background="{x:Null}" BorderThickness="0,0,0,2" Margin="0,0,0,10" SelectionBrush="#FF7910AA" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <TextBlock Text="Password" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <PasswordBox x:Name="PasswordField" MinWidth="175" MaxWidth="175" HorizontalAlignment="left" BorderThickness="0,0,0,2" Background="{x:Null}" BorderBrush="#FFCFCCCC" Margin="0,0,0,10" SelectionBrush="#FF7910AA" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <TextBlock Text="Password (Again)" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <PasswordBox x:Name="PasswordAgainField" MinWidth="175" MaxWidth="175" HorizontalAlignment="left" BorderThickness="0,0,0,2" Background="{x:Null}" BorderBrush="#FFCFCCCC" Margin="0,0,0,10" SelectionBrush="#FF7910AA" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <TextBlock Text="Date of birth" Foreground="#FFBDBBBB" FontFamily="Roboto"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="DayOfBirth" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0,0,0,2" Background="{x:Null}" BorderBrush="#FFCFCCCC" Margin="0,0,0,10" Foreground="#FFBDBBBB" FontFamily="Roboto" PreviewKeyDown="DayOfBirth_PreviewKeyDown" MaxLength="2" Text="1"/>
                    <TextBox x:Name="YearOfBirth" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0,0,0,2" Background="{x:Null}" BorderBrush="#FFCFCCCC" Margin="0,0,0,10"  Foreground="#FFBDBBBB" FontFamily="Roboto" PreviewKeyDown="DayOfBirth_PreviewKeyDown" MaxLength="4" Text="2000"/>
                    <ComboBox SelectedIndex="0" BorderThickness="0,0,0,2" Background="{x:Null}" BorderBrush="#FFCFCCCC" Margin="0,0,0,10"  x:Name="MonthOfBirth" Grid.Column="1" Foreground="#FFBDBBBB" FontFamily="Roboto" Style="{DynamicResource Combobox}">
                        <!--Style Combobox, PLEASE MINIMALIZE-->
                        <ComboBox.Resources>
                            <Style x:Key="FocusVisual">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <SolidColorBrush x:Key="ComboBox.Static.Background">
                            </SolidColorBrush>
                            <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
                            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0.0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
                            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
                            <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFDAECFC" Offset="0.0"/>
                                <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
                            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
                                <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
                            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="ClickMode" Value="Press"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                    <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                        <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                            <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer">
                                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Themes:SystemDropShadowChrome>
                                    </Popup>
                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsGrouping" Value="true"/>
                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </MultiTrigger>
                                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                            <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
                            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="AllowDrop" Value="true"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                        <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                            <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer">
                                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Themes:SystemDropShadowChrome>
                                    </Popup>
                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                    <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                                        <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsGrouping" Value="true"/>
                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </MultiTrigger>
                                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                            <Style x:Key="Combobox" TargetType="{x:Type ComboBox}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="Padding" Value="6,3,5,3"/>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEditable" Value="true">
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter Property="Padding" Value="2"/>
                                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Resources>
                        <ComboBoxItem Content="January"/>
                        <ComboBoxItem Content="February"/>
                        <ComboBoxItem Content="March"/>
                        <ComboBoxItem Content="April"/>
                        <ComboBoxItem Content="May"/>
                        <ComboBoxItem Content="June"/>
                        <ComboBoxItem Content="July"/>
                        <ComboBoxItem Content="August"/>
                        <ComboBoxItem Content="September"/>
                        <ComboBoxItem Content="October"/>
                        <ComboBoxItem Content="November"/>
                        <ComboBoxItem Content="December"/>
                    </ComboBox>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <CheckBox x:Name="ToSCheckBox" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Height="28" VerticalAlignment="Bottom"/>
                    <TextBlock FontFamily="Roboto" Grid.Row="0" Grid.Column="1" >
                        <Run Foreground="#000000" Text="I Agree To"/>
                        <Run Foreground="#673ab7" Text="The Privacy Statement"/>
                    </TextBlock>
                    <TextBlock FontFamily="Roboto" Grid.Row="1" Grid.Column="1" Text="And Terms Of Service">
                        <Run Foreground="#000000" Text="And"/>
                        <Run Foreground="#673ab7" Text="Terms Of Service"/>
                    </TextBlock>
                </Grid>
                <Grid Margin="0,0,5,0">
                    <Image Name="ErrorMessageImage"/>
                    <TextBlock Grid.Column="1" Name="ErrorMessage" FontFamily="Roboto" Foreground="#F44336"/>
                </Grid>
                <Button x:Name="CreateAccount" Padding="0,5,0,0" Content="CREATE ACCOUNT" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="#673ab7" HorizontalAlignment="Left" FontWeight="Bold" FontFamily="Roboto" Click="CreateAccount_Click"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>